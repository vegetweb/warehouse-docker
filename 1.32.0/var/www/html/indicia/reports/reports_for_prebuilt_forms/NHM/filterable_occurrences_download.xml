<report
    title="NHM Big Seaweed Search: Occurrences Download using standard filters"
    description="Report suitable for downloading data, compatible with the standard report filter parameters. No locations."
>
  <query website_filter_field="o.website_id" samples_id_field="o.sample_id" standard_params="true">
  SELECT #columns#
  FROM cache_occurrences o
  JOIN occurrences occ on occ.id=o.id and occ.deleted=false -- to get sensitivity_precision
  JOIN cache_taxa_taxon_lists cttl on cttl.id=o.taxa_taxon_list_id
  JOIN samples s on s.id=o.sample_id AND s.deleted=false
  JOIN websites w on w.id=o.website_id 
  JOIN users u ON u.id=o.created_by_id
  JOIN people p ON p.id=u.person_id
  JOIN cache_samples_nonfunctional snf on snf.id = o.sample_id
  #agreements_join#
  #joins#
  WHERE #sharing_filter#
  #idlist#
  </query>
  <order_bys>
    <order_by>o.id DESC</order_by>
  </order_bys>
  <params>
    <param name='smpattrs' display='Sample attribute list' description='Comma separated list of sample attribute IDs to include' datatype='smpattrs' />
    <param name='occattrs' display='Occurrence attribute list' description='Comma separated list of occurrence attribute IDs to include' datatype='occattrs' />
    <param name='uploadFolder' display='Image upload folder' description='Image upload folder on the warehouse including the trailing slash' datatype='string' default='' />
    <param name='warehouse_id' display='Warehouse unique ID' default='iBRC' 
        description='Unique identifier code for the warehouse which can be prepended to occurrence IDs to make a globally unique record key'/>
  </params>
  <columns>
    <column name='occurrence_id' display='ID' sql='o.id' datatype='integer' distincton="true" template="&lt;div class='status-{record_status} certainty-{certainty}'&gt;{occurrence_id}&lt;/div&gt;" />
    <column name='recordkey' display='RecordKey' sql="'#warehouse_id#' || o.id" datatype="text" />
    <column name='source' display='Source' sql="w.title || ' | ' || o.survey_title" datatype="text" />
    <column name='sample_id' visible='false' sql='case when occ.sensitivity_precision is null then o.sample_id else null end' datatype='integer' />
    <column name='taxon' display='Species' 
      template="&lt;div class='zero-{zero_abundance}'&gt;{taxon}&lt;/div&gt;"
      sql="o.preferred_taxon" datatype='species' />
    <column name='common' display='Common name' 
      template="&lt;div class='zero-{zero_abundance}'&gt;{common}&lt;/div&gt;"
      sql="upper(substring(o.default_common_name from 1 for 1)) || substring(o.default_common_name from 2 for length(o.default_common_name))" datatype='text' />
    <column name='taxa_taxon_list_id' visible='false' sql='o.taxa_taxon_list_id' datatype='integer' />
    <column name='location_name' display='Site name' sql="case when occ.sensitivity_precision is null and s.privacy_precision is null then o.location_name else 'Sensitive. Lat long is approximate.' end" datatype='text' />
    <column name='entered_sref' display='Grid ref' sql="case s.entered_sref_system when '4326' then o.public_entered_sref else replace(o.public_entered_sref, ' ', '') end" datatype='text' />
    <column name='projection' display='Projection' 
        sql="case s.entered_sref_system when '4326' then 'WGS84' when '27700' then 'OSGB36' else upper(s.entered_sref_system) end" 
        datatype="text" />
    <column name='date_start' sql='o.date_start' visible='false' />
    <column name='date_end' sql='o.date_end' visible='false' />
    <column name='date_type' sql='o.date_type' visible='false' />
    <column name='date' display='Date' datatype='date' />
    <column name='input_date' sql='occ.created_on' display='Input on date' datatype='date' />
    <column name='last_edit_date' sql='occ.updated_on' display='Last edited on date' datatype='date' />
    <column name='recorder' display='Recorder' sql="rtrim(o.recorders, ', ')" datatype="text" />
    <column name='verifier' display='Verifier' sql='o.verifier' datatype="text" />
    <column name='verified_on' display='Verified on' sql='o.verified_on' datatype="text" />
    <column name='sample_comment' display='Sample comment' sql="s.comment" datatype="text" />
    <column name='zeroabundance' display='Zero abundance' sql='upper(cast (o.zero_abundance as character))' datatype="text" />
    <column name='record_status' display='State' 
        sql="CASE o.record_status WHEN 'V' THEN 'Verified' WHEN 'D' THEN 'Queried' WHEN 'R' THEN 'Rejected' WHEN 'I' THEN 'Input still in progress' WHEN 'C' THEN 'Record Submitted' WHEN 'S' THEN 'Awaiting check' ELSE o.record_status END" />
    <column name='belongs_to_user' display='Belongs to user' sql="CASE CAST(o.created_by_id AS character varying) WHEN '#currentUser#' THEN true ELSE false END" visible="false" />
    <column name='certainty' display="Recorder certainty" sql="CASE o.certainty WHEN 'C' THEN 'Certain' WHEN 'L' THEN 'Likely' WHEN 'U' THEN 'Uncertain' END" />
    <!-- the following can only be filled in for sure if we have an exact match with the recorder, since we only know the record created by ID.-->
    <column name='recorder_person_id' sql="case when o.recorders = p.surname || ', ' || p.first_name or o.recorders = p.first_name || ' ' || p.surname then cast(p.id as varchar(20)) else 'unknown' end" />
    <column name='sample_images' display='Sample Images' sql="case when snf.media is null then null else '#uploadFolder#' || replace(snf.media, ',', ', #uploadFolder#') end"/>
    <column name='images' display='Images' sql="case when images is null then null else '#uploadFolder#' || replace(images, ',', ', #uploadFolder#') end"/>
  </columns>
</report>