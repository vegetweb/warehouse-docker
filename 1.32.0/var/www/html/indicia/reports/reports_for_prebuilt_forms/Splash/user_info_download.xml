<report
    title="User Information Download"
    description="Report containing user and person information for download purposes. Includes filter to include only users with/without allocations and another to only show users who have an allocation made in a given date range. Also
an event filter to return users associated with a particular event."
>
  <query website_filter_field="uw.website_id">
  SELECT #columns#
  FROM people p
  JOIN users u ON u.person_id=p.id AND u.deleted=false 
  JOIN users_websites uw on u.id=uw.user_id 
    LEFT JOIN person_attribute_values pavAddr ON pavAddr.person_id=u.person_id AND pavAddr.person_attribute_id=#address_attr_id# AND pavAddr.deleted=false 
    LEFT JOIN person_attribute_values pavTown ON pavTown.person_id=u.person_id AND pavTown.person_attribute_id=#town_attr_id# AND pavTown.deleted=false 
    LEFT JOIN person_attribute_values pavCounty ON pavCounty.person_id=u.person_id AND pavCounty.person_attribute_id=#county_attr_id# AND pavCounty.deleted=false 
    LEFT JOIN person_attribute_values pavCountry ON pavCountry.person_id=u.person_id AND pavCountry.person_attribute_id=#country_attr_id# AND pavCountry.deleted=false 
    LEFT JOIN person_attribute_values pavPC ON pavPC.person_id=u.person_id AND pavPC.person_attribute_id=#post_code_attr_id# AND pavPC.deleted=false 
    LEFT JOIN person_attribute_values pav18 ON pav18.person_id=u.person_id AND pav18.person_attribute_id=#over_18_attr_id# AND pav18.deleted=false 
  
  -- Get squares associated with users provided the square creation date is later than the minimum date parameter
  LEFT JOIN person_attribute_values sqrPav ON sqrPav.person_id=u.person_id AND sqrPav.person_attribute_id=#user_square_attr_id# AND sqrPav.deleted=false 
  LEFT JOIN locations sqr ON sqr.id=sqrPav.int_value AND sqr.location_type_id = #core_square_location_type_id# AND sqr.deleted=false 
    AND ('#ignore_square_dates_before#'='' OR (sqr.created_on &gt;= CAST(COALESCE('#ignore_square_dates_before#','1500-01-01') as date))) 
  LEFT JOIN person_attribute_values sqrPavDated ON sqrPavDated.person_id=u.person_id AND sqrPavDated.person_attribute_id=#user_square_attr_id# AND sqrPavDated.deleted=false 
    AND sqrPavDated.int_value=sqr.id
    
 
  -- Get events associated with user. There is an event parameter, need to be careful here as we still want to show the other events a user might be associated 
  -- with even though we might only be returning users associated with a particular event.
  LEFT JOIN person_attribute_values eventPav ON eventPav.person_id=p.id AND eventPav.person_attribute_id=#user_event_attr_id# AND eventPav.deleted=false
  LEFT JOIN person_attribute_values eventPav2 ON eventPav2.person_id=p.id AND eventPav2.person_attribute_id=#user_event_attr_id# AND eventPav2.deleted=false
  LEFT JOIN locations event ON event.id=eventPav.int_value AND event.deleted=false  
  WHERE p.deleted=false
  AND #website_filter#
  AND (('#allocation_status#'='') 
      OR ('#allocation_status#'='allocated' AND sqrPavDated.id IS NOT NULL)
      OR ('#allocation_status#'='unallocated' AND p.id NOT in 
        (
          select person_id
          from person_attribute_values subPav
          join locations subSqr ON subSqr.id=subPav.int_value AND subSqr.location_type_id = #core_square_location_type_id# AND subSqr.deleted=false 
            and ('#ignore_square_dates_before#'='' OR (subSqr.created_on &gt;= CAST(COALESCE('#ignore_square_dates_before#','1500-01-01') as date))) 
          where
            subPav.person_attribute_id=#user_square_attr_id# AND subPav.deleted=false 
            AND subPav.person_id=u.person_id
        )  
      ))
  -- Only show users who have a square allocated within a given date range. Users who have a square allocation in the range, but other squares for them are outside the range, have those extra squares shown in red.
  AND (('#allocation_date_start#'='' AND '#allocation_date_end#'='')
      OR  
        (p.id in
            (
              select person_id
              from person_attribute_values pavAllocDated 
              join locations sqrAllocDated ON sqrAllocDated.id=pavAllocDated.int_value AND sqrAllocDated.location_type_id = #core_square_location_type_id# AND sqrAllocDated.deleted=false 
                and ('#ignore_square_dates_before#'='' OR (sqrAllocDated.created_on &gt;= CAST(COALESCE('#ignore_square_dates_before#','1500-01-01') as date))) 
              where
                pavAllocDated.person_attribute_id=#user_square_attr_id# AND pavAllocDated.deleted=false 
                AND (pavAllocDated.created_on &gt;= CAST(COALESCE('#allocation_date_start#','1500-01-01') as date) OR '#allocation_date_start#'='')
                AND (pavAllocDated.created_on &lt;= CAST(COALESCE('#allocation_date_end#','1500-01-01') as date) OR '#allocation_date_end#'='')
                AND pavAllocDated.person_id=u.person_id
            )))  
  </query>
  <order_bys>
    <order_by>p.surname ASC</order_by>
  </order_bys>
  <params>
    <param name='event_id' display='Event' description='Select an event to see people signed up up for that event.' datatype='lookup'
        population_call='report:reports_for_prebuilt_forms/Splash/events_for_population_call:id:name' emptyvalue='0'>
      <where>(eventPav2.int_value=#event_id# OR '#event_id#'='0')</where>
    </param>
    <param name="core_square_location_type_id" display="Core Square location type id" datatype="integer"/>
    <param name='allocation_status' display='Allocated?' description='Choose whether you only wish to return users with allocated squares, without allocated squares, or leave as Please Select for both.' emptyvalue='' datatype='lookup'
        lookup_values='allocated:Allocated,unallocated:Unallocated' />
    <param name='user_square_attr_id' display='Id of the person attribute that holds user squares' description='' datatype='integer'/>
    <param name='user_event_attr_id' display='Id of the person attribute that holds user events' description='' datatype='integer'/>
    <param name="registration_date_start" display="User registered on or after this date" description="Only return users who registered on or after this date." datatype="date" emptyvalue="">
      <where>(uw.created_on &gt;= CAST(COALESCE('#registration_date_start#','1500-01-01') as date))</where>
    </param>  
    <param name="registration_date_end" display="User registered before this date" description="Only return users who registered before this date." datatype="date" emptyvalue="">
      <where>(uw.created_on &lt;= CAST(COALESCE('#registration_date_end#','1500-01-01') as date))</where>
    </param>
    <param name="ignore_square_dates_before" display="Ignore Square Dates Before" description="Ignore any squares created before this date.
        Useful if old squares are left on the system but are not currently active." datatype="date" emptyvalue="" default=""/>
    <param name="address_attr_id" display="Address attribute id" description="Person attribute id that holds the user address." datatype="text"/>
    <param name="town_attr_id" display="Town attribute id" description="Person attribute id that holds the user town." datatype="text"/>
    <param name="county_attr_id" display="County attribute id" description="Person attribute id that holds the user county." datatype="text"/>
    <param name="country_attr_id" display="Country attribute id" description="Person attribute id that holds the user country." datatype="text"/>
    <param name="post_code_attr_id" display="Post code attribute id" description="Person attribute id that holds the user post code." datatype="text"/>
    <param name="over_18_attr_id" display="Over 18 attribute id" description="Person attribute id that holds whether a user is over 18." datatype="text"/>
    <param name="allocation_date_start" display="User allocated square on or after this date" description="Only return users who were allocated a square on or after this date." datatype="date" emptyvalue=""/>
    <param name="allocation_date_end" display="User allocated square before this date" description="Only return users who were allocated a square before this date." datatype="date" emptyvalue=""/>
  </params>
  <columns> 
    <column name='id' sql='u.id' display='Indicia User Id' datatype='integer' in_count="true"/>
    <column name='first_name' display='First name' sql='p.first_name' datatype='text' /> 
    <column name='surname' display='Surname' sql='p.surname' datatype='text' />        
    <column name='username' display='Indicia Username' sql='u.username' datatype='text'/> 
    <column name='email_address' display='Email address' sql='p.email_address' datatype='text' />  
    <column name='address' display='Address' sql='pavAddr.text_value' datatype='text' /> 
    <column name='town' display='Town' sql='pavTown.text_value' datatype='text' />
    <column name='county' display='County' sql='pavCounty.text_value' datatype='text' />
    <column name='country' display='Country' sql='pavCountry.text_value' datatype='text' />
    <column name='post_code' display='Post Code' sql='pavPC.text_value' datatype='text' />
    <column name='over_18' display='Over 18?' sql="case pav18.text_value when '1' then 'Yes' else 'No' End" datatype='text' />
    <column name='registration_date' display='Registration date' sql='uw.created_on' datatype='text' />  
    <column name='count' sql='count(distinct(sqr.id))' display='Number of allocated squares' datatype='integer' aggregate="true"/>
    <column name='allocated_squares' sql="string_agg(distinct(case when 
          ((sqrPavDated.created_on &gt;= CAST(COALESCE('#allocation_date_start#','1500-01-01') as date) OR '#allocation_date_start#'='')
          AND (sqrPavDated.created_on &lt;= CAST(COALESCE('#allocation_date_end#','1500-01-01') as date) OR '#allocation_date_end#'=''))
        then sqr.name else '&lt;b style=&quot;color:red&quot;&gt;' || sqr.name || '&lt;/b&gt;' END), ',')" display='Squares allocated' datatype='text' aggregate="true"/>
    <column name='allocated_events' sql="string_agg(distinct(event.name), ',')" display='Events' datatype='text' aggregate="true"/>
  </columns>
</report>
