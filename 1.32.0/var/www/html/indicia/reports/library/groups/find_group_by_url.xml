<?xml version="1.0" encoding="UTF-8"?>
<report title="Groups list" description="Lists groups.">
  <query website_filter_field="g.website_id">
    SELECT #columns#
    FROM groups g
    LEFT JOIN groups_users gu ON gu.group_id=g.id AND gu.deleted=false AND gu.user_id=#currentUser#
    LEFT JOIN group_pages gp ON gp.group_id=g.id AND gp.deleted=false AND
    (((gp.administrator=false OR gu.administrator=true) and gu.id is not null AND gu.pending=false) OR gp.administrator is null) AND
    (gu.administrator=true OR COALESCE(gu.access_level, 0)&gt;=COALESCE(gp.access_level, 0))
    LEFT JOIN group_pages gpall ON gpall.group_id=g.id AND gpall.deleted=false
    JOIN cache_termlists_terms gt on gt.id=g.group_type_id
    #joins#
    WHERE g.deleted = false
    AND #website_filter#
  </query>
  <order_bys>
    <order_by>g.id</order_by>
  </order_bys>
  <params>
    <param name="currentUser" display="Current User ID" description="Current user's warehouse ID." datatype="text" emptyvalue="0"/>
    <param name="group_type_id" display="Group Type" description="Limit the report to a certain type of group" datatype="lookup"
           population_call='report:library/terms/terms_list:id:term:termlist_external_key=indicia:group_types,termlist_id='
           default="">
      <where>g.group_type_id in (#group_type_id#)</where>
    </param>
    <param name="title" display="Group title" datatype="text">
      <where>btrim(regexp_replace(regexp_replace(lower(g.title::text), '[ ]'::text, '-'::text, 'g'::text), '[^a-z0-9\-]'::text, ''::text, 'g'::text), '-'::text)
        = btrim(regexp_replace(regexp_replace(lower('#title#'::text), '[ ]'::text, '-'::text, 'g'::text), '[^a-z0-9\-]'::text, ''::text, 'g'::text), '-'::text)
      </where>
    </param>
    <param name="parent_title" display="Parent group title" datatype="text" default="">
      <join>
        join group_relations gr on gr.to_group_id=g.id and gr.deleted=false
        join groups gprnt on gprnt.id=gr.from_group_id and gprnt.deleted=false
      </join>
      <where>btrim(regexp_replace(regexp_replace(lower(gprnt.title::text), '[ ]'::text, '-'::text, 'g'::text), '[^a-z0-9\-]'::text, ''::text, 'g'::text), '-'::text)
        = btrim(regexp_replace(regexp_replace(lower('#parent_title#'::text), '[ ]'::text, '-'::text, 'g'::text), '[^a-z0-9\-]'::text, ''::text, 'g'::text), '-'::text)
      </where>
    </param>
  </params>
  <columns>
    <column name="id" visible="false" sql="g.id" datatype="integer" in_count="true" distincton="true" />
    <column name="title" display="Name" sql="g.title" datatype="text" />
    <column name="logo_path" display="Logo" sql="g.logo_path" img="true" visible="false" />
    <column name="description" display="Description" sql="g.description" datatype="text" />
    <column name="group_type_id" sql="g.group_type_id" datatype="integer" />
    <column name="group_type_term" sql="gt.term" datatype="text" />
    <column name="joining_method_raw" visible="false" sql="g.joining_method" datatype="text" />
    <column name="administrator" display="Admin" sql="gu.id is not null AND gu.pending=false AND gu.administrator=true" datatype="boolean" visible="false" />
    <column name="pending" display="Pending" sql="gu.id is not null AND gu.pending=true" datatype="boolean" visible="false" />
    <column name="member" display="Member" sql="gu.id is not null AND gu.pending=false" datatype="boolean" visible="false" />
    <column name="nonmember" display="Non-member" sql="gu.id is null or gu.pending=false" datatype="boolean" visible="false" />
    <column name="role" display="My role" sql="case when gu.administrator=true then 'Administrator' when gu.id is not null and gu.pending=false then 'Member' when gu.id is not null and gu.pending=true then 'Awaiting approval' else 'Non-member' end" datatype="text" />
    <column name="joining_method" display="Can anyone join?" sql="case g.joining_method when 'P' then 'Yes' when 'R' then 'By request only' when 'I' then 'By invite only' end" datatype="text" />
    <column name="groups_user_id" sql="gu.id" datatype="integer" />
    <column name="implicit_record_inclusion" sql="g.implicit_record_inclusion" datatype="boolean" />
    <column name="pages" display="Links" sql="array_to_string(array_agg(distinct '&lt;a class=&quot;button ' || lower(regexp_replace(gp.path, '[^a-zA-Z0-9]', '-')) || '&quot; href=&quot;{rootFolder}' || gp.path || '{sep}group_id=' || g.id || '&amp;implicit=' || coalesce(g.implicit_record_inclusion::char, '') || '&quot;&gt;' || gp.caption || '&lt;/a&gt;'), ' ')"
            aggregate="true" template="{pages}"/>
    <column name="page_classes" visible="false" sql="array_to_string(array_agg(distinct lower(regexp_replace(gpall.path, '[^a-zA-Z0-9]', '-'))), ' ')"
            aggregate="true"/>
  </columns>
</report>
