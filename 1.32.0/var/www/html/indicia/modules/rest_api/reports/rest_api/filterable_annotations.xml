<report
    title="Annotations for REST API"
    description="Retrieves record annotations to support the REST api module. Compatible with the standard report filter parameters."
    >
  <query website_filter_field="o.website_id" samples_id_field="o.sample_id" standard_params="occurrences" count_field="oc.*">
    select #columns#
    from occurrence_comments oc
    join cache_occurrences_functional o on o.id=oc.occurrence_id
    join occurrences occ on occ.id=o.id
    join users u on u.id=oc.created_by_id and u.deleted=false
    join people p on p.id=u.person_id and p.deleted=false
    #agreements_join#
    #joins#
    where #sharing_filter#
    and oc.deleted=false
    and o.taxa_taxon_list_external_key is not null
    #idlist#
  </query>

  <order_bys>
    <order_by>oc.updated_on ASC</order_by>
  </order_bys>
  <params>
    <param name='system_user_id' display='System ID' description='3 character code identifying the system' datatype='text'/>
    <param name="smpattrs" display="Sample attribute list"
           description="Comma separated list of sample attribute IDs to include" datatype="smpattrs" default=""/>
    <param name="occattrs" display="Occurrence attribute list"
           description="Comma separated list of occurrence attribute IDs to include" datatype="occattrs" default=""/>
    <param name="comment_edited_date_from" datatype="date" default="">
      <where>oc.updated_on&gt;='#comment_edited_date_from#'</where>
    </param>
    <param name="comment_edited_date_to" datatype="date" default="">
      <where>oc.updated_on&lt;='#comment_edited_date_to#'</where>
    </param>
  </params>
  <columns>
    <column name="id" sql="COALESCE(oc.external_key, '#system_user_id#' || oc.id::varchar)" datatype="text"/>
    <column name="taxon_observation_id" 
            sql="COALESCE(occ.external_key, '#system_user_id#' || o.id::varchar)" datatype="integer"/>
    <column name="taxonVersionKey" sql="o.taxa_taxon_list_external_key" datatype="text"/>
    <column name="comment" sql="oc.comment" datatype="text"/>
    <column name="statusCode1" sql="case oc.record_status when 'V' then 'A' when 'R' then 'N' when 'D' then 'U' else
      /* fallback for old comments */
      case when oc.comment like 'Verified%' or oc.comment like 'This record is assumed to be correct' then 'A'
        when oc.comment like 'Dubious%' or oc.comment like 'Query%' then 'U'
        when oc.comment like 'Rejected%' then 'N' end
    end" />
    <column name="statusCode2" sql="oc.record_substatus" datatype="integer" />
    <column name="question" sql="oc.query" datatype="boolean" />
    <column name="authorName" datatype="text"
            sql="coalesce(oc.person_name, case u.id when 1 then 'anonymous' else p.first_name || ' ' || p.surname end)"/>
    <!--column name="emailaddress" display="Email" sql="" -->
    <column name="dateTime" sql="to_char(oc.created_on, 'YYYY-MM-DD&quot;T&quot;HH24:MI:SS')"/>
    <column name='lastEditDate' display='Last Edit Date' sql="to_char(oc.updated_on, 'YYYY-MM-DD&quot;T&quot;HH24:MI:SS')" />
  </columns>
</report>